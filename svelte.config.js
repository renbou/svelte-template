import $ from"svelte-preprocess";import*as o from"path";import*as a from"fs/promises";import*as g from"path";var v=(s,...e)=>i.merging(...Object.getOwnPropertyNames(s).map(t=>i.alias({alias:t,directory:g.resolve(s[t])},...e)));var m=s=>{let e=v(s,i.sass,i.pkgJson);return function(n,r,u){Promise.resolve(e(n)).then(l=>{if(l!==void 0&&l.length>0){u({file:l[0]});return}u(null)})}};function b(s){return[s]}async function c(s,e){return a.stat(s).then(t=>e&&e(t)||!e?[s]:void 0).catch(()=>!1)}async function p(s){return c(s,e=>e.isFile())}async function R(s){return c(s,e=>e.isDirectory())}function f(...s){return async function(e){let t=[];for(let n of s.map(r=>`${e}.${r}`))await p(n)&&t.push(n);return t.length>0?t:void 0}}var d=f("js","cjs","mjs"),y=f("sass","scss","css");async function x(s){if(/\.(css|scss|sass)$/.test(s))return[s];let e=[s,`${s}/index`,`${s}/_index`];o.basename(s).startsWith("_")||e.push(`${o.dirname(s)}/_${o.basename(s)}`);let t=[];for(let n of e){let r=await y(n);r&&t.push(...r)}return t}async function P(s){let e=o.join(s,"package.json");try{if(await p(e)){let t=JSON.parse((await a.readFile(e)).toString()),n=t.main?o.join(s,t.main):void 0;if(n)return[n]}}catch(t){console.error(`Error resolving module package.json for path ${s}: ${t instanceof Error?t.message:t}`)}}async function j(s){let e=await d(o.join(s,"index"));if(e)return e}function h(...s){return async e=>{let t=[];for(let n of s)await Promise.resolve(n(e)).then(r=>{r!==void 0&&t.push(...r)});return t}}function w({alias:s,directory:e},...t){let n=h(...t);return async r=>{if(r.startsWith(s)&&r.length>s.length)return n(o.join(e,r.slice(s.length)))}}var i={identity:b,existing:c,existingFile:p,existingDir:R,extension:f,jsExtension:d,sassExtension:y,merging:h,sass:x,pkgJson:P,jsIndex:j,alias:w};var S={preprocess:$({sourceMap:process.env.NODE_ENV==="production",scss:{renderSync:!1,importer:m({"@":"./src","~":"./node_modules"}),prependData:'@use "@styles/variables" as *;'}})};export{S as default};
